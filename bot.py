import telebot
import config
import time
import pyowm
import sqlite3
from pyowm.owm import OWM
from pyowm.utils.config import get_default_config
from sqliter import SQLighter
import markups as m

#–ø–æ–¥–∫–ª—é—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã –∏ —è–∑—ã–∫

bot = telebot.TeleBot(config.TOKEN)
config_dict = get_default_config()
config_dict['language'] = 'ru'
owm = OWM(config.OWM_TOKEN, config_dict)
mgr = owm.weather_manager()

# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î
db = SQLighter('db.db')

# –ö–æ–º–∞–Ω–¥–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏
@bot.message_handler(commands=['subscribe'])
def subscribe(message):
	if(not db.subscriber_exists(message.from_user.id)):
		# –µ—Å–ª–∏ —é–∑–µ—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
		keyboard = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True, one_time_keyboard=True)
		button_geo = telebot.types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", request_location=True)
		keyboard.add(button_geo)

		send = bot.send_message(message.chat.id, "–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –ø–µ—Ä–µ–¥–∞–π –º–Ω–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", reply_markup=keyboard )
		lat = message.location.latitude
		lon = message.location.longitude

		db.add_subscriber(message.from_user.id, lat, lon)

		time.sleep(1)

		bot.send_message(message.chat.id, "–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É! üëç\n")
	else:
		# –µ—Å–ª–∏ –æ–Ω —É–∂–µ –µ—Å—Ç—å, —Ç–æ –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º –µ–º—É —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
		db.update_subscription(message.from_user.id, True)
		time.sleep(1)
		bot.send_message(message.chat.id, "–í—ã —É–∂–µ –≤ –±–∞–∑–µ!\n")


@bot.message_handler(commands=['unsubscribe'])
def unsubscribe(message):
	if(not db.subscriber_exists(message.from_user.id)):
		# –µ—Å–ª–∏ —é–∑–µ—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ —Å –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–æ–π (–∑–∞–ø–æ–º–∏–Ω–∞–µ–º)
		db.add_subscriber(message.from_user.id, None, None, False)
		time.sleep(1)
		bot.send_message(message.chat.id, "–í—ã –∏—Ç–∞–∫ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã.")
	else:
		# –µ—Å–ª–∏ –æ–Ω —É–∂–µ –µ—Å—Ç—å, —Ç–æ –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º –µ–º—É —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
		db.update_subscription(message.from_user.id, False)
		time.sleep(1)
		bot.send_message(message.chat.id, "–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø–∏—Å–∞–Ω—ã –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏.")




#handler –¥–ª—è /start
@bot.message_handler(commands = ['start'])
def start_command(message):
	bot.send_message(message.chat.id, '–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –¥–ª—è —Å–≤–æ–µ–≥–æ –≥–æ—Ä–æ–¥–∞ –∏–ª–∏ —Å—Ç—Ä–∞–Ω—ã\n')

#handler –¥–ª—è /help
@bot.message_handler(commands = ['help'])
def help_command(message):
	keyboard = telebot.types.InlineKeyboardMarkup()
	keyboard.add(telebot.types.InlineKeyboardButton('Message the developer', url='telegram.me/Arubeon'))
	bot.send_message(message.chat.id, '–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –¥–ª—è —Å–≤–æ–µ–≥–æ –≥–æ—Ä–æ–¥–∞ –∏–ª–∏ —Å—Ç—Ä–∞–Ω—ã\n' + 
		'–ö–æ–º–∞–Ω–¥—ã:\n' + 
		'/geo - –¥–∞—Ç—å –±–æ—Ç—É –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é\n' +
		'/locweather - –ø–æ–≥–æ–¥–∞ –ø–æ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏\n' + 
		'/weather - –ø–æ–≥–æ–¥–∞ –≤ –∫–∞–∫–æ–º-—Ç–æ –≥–æ—Ä–æ–¥–µ\n' + 
		'/subscribe - –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É\n' +
		'/unsubscribe - –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏\n', 
		reply_markup=keyboard )

#handler –¥–ª—è geo
@bot.message_handler(commands=["geo"])
def geo(message):
    keyboard = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True, one_time_keyboard=True)
    button_geo = telebot.types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", request_location=True)
    keyboard.add(button_geo)
    send = bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –ø–µ—Ä–µ–¥–∞–π –º–Ω–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", reply_markup=keyboard )
    bot.register_next_step_handler(send, geo_weather)


 #–¥–ª—è –ø–æ–≥–æ–¥—ã –ø–æ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
def geo_weather(message):
	lat = message.location.latitude
	lon = message.location.longitude

	bot.send_message(message.chat.id, '–ò—â—É –ø–æ–≥–æ–¥—É –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º {} {}'.format(lat, lon))
	one_call_obj = mgr.one_call(lat=lat, lon=lon)
	
	weather = one_call_obj.current.detailed_status
	temp = one_call_obj.current.temperature('celsius')["temp"]
	hum = one_call_obj.current.humidity
	time = one_call_obj.current.reference_time(timeformat='iso')
	wind = one_call_obj.current.wind()["speed"]
	clouds = one_call_obj.current.clouds

	answer = '\U000026C5 –ü–æ–≥–æ–¥–∞: {}\n'.format(weather)
	answer += '\U0001F321 –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {} ¬∞C\n'.format(temp)
	answer += '\U0001F343 –í–µ—Ç–µ—Ä:  {} –º/—Å\n'.format(wind)
	answer += '\U00002601 –û–±–ª–∞–∫–∞:  {} %\n\n'.format(clouds)

	bot.send_message(message.chat.id, answer,reply_markup=m.start_markup)

@bot.message_handler(commands = ['locweather'])
def loc_weather(message):
	info = db.coord_give(message.from_user.id)

	for row in info:
		lat = row[3]
		lon = row[4]
	
	one_call_obj = mgr.one_call(lat=lat, lon=lon)
	
	weather = one_call_obj.current.detailed_status
	temp = one_call_obj.current.temperature('celsius')["temp"]
	hum = one_call_obj.current.humidity
	time = one_call_obj.current.reference_time(timeformat='iso')
	wind = one_call_obj.current.wind()["speed"]
	clouds = one_call_obj.current.clouds

	answer = '\U000026C5 –ü–æ–≥–æ–¥–∞: {}\n'.format(weather)
	answer += '\U0001F321 –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {} ¬∞C\n'.format(temp)
	answer += '\U0001F343 –í–µ—Ç–µ—Ä:  {} –º/—Å\n'.format(wind)
	answer += '\U00002601 –û–±–ª–∞–∫–∞:  {} %\n\n'.format(clouds)

	bot.send_message(message.chat.id, answer,reply_markup=m.start_markup)

#handler –¥–ª—è /weather
@bot.message_handler(commands=['weather'])
def cmd_city(message):#***–≤–≤–æ–¥ –≥–æ—Ä–æ–¥–∞***
    send = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –≥–æ—Ä–æ–¥', reply_markup = m.city_markup)
    bot.register_next_step_handler(send, send_weather)

def send_weather(message):
	try:#***–≤—ã–¥–∞—á–∞ –ø–æ–≥–æ–¥—ã –ø–æ –≥–æ—Ä–æ–¥—É***
		city=message.text
		bot.send_message(message.chat.id, '–ò—â—É –ø–æ–≥–æ–¥—É –≤ –≥–æ—Ä–æ–¥–µ {}'.format(city))
		observation = mgr.weather_at_place(city)
		w = observation.weather
		weather = w.detailed_status
		temp = w.temperature('celsius')["temp"]
		hum = w.humidity
		time = w.reference_time(timeformat='iso')
		wind = w.wind()["speed"]
		clouds = w.clouds

		answer = '\U000026C5 –ü–æ–≥–æ–¥–∞: {}\n'.format(weather)
		answer += '\U0001F321 –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {} ¬∞C\n'.format(temp)
		answer += '\U0001F343 –í–µ—Ç–µ—Ä:  {} –º/—Å\n'.format(wind)
		answer += '\U00002601 –û–±–ª–∞–∫–∞:  {} %\n\n'.format(clouds)

		if temp < 11:
			answer += "–°–µ–π—á–∞—Å –æ—á–µ–Ω—å —Ö–æ–ª–æ–¥–Ω–æ."
		elif temp < 20:
			answer += "–°–µ–π—á–∞—Å –ø—Ä–æ—Ö–ª–∞–¥–Ω–æ, –ª—É—á—à–µ –æ–¥–µ—Ç—å—Å—è –ø–æ—Ç–µ–ø–ª–µ–µ."
		else:
			answer += "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –Ω–æ—Ä–º–µ!"

		bot.send_message(message.chat.id, answer,reply_markup=m.start_markup)
	except:
		bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞',reply_markup=m.start_markup)


def scheduled(message):
# –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –±–æ—Ç–∞
	subscriptions = db.get_subscriptions()
	# –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ–º –Ω–æ–≤–æ—Å—Ç—å
	for s in subscriptions:
		bot.send_locweather()


bot.enable_save_next_step_handlers(delay=2)
bot.load_next_step_handlers()
bot.polling( none_stop = True)